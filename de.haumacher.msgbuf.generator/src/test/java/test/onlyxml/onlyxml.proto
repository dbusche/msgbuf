syntax = "msgbuf";

package test.onlyxml.data;

option NoJson;
option NoBinary;
option NoReflection;
option NoListener;
option NoVisitor;
option NoTypeKind;

/** 
 * An abstract base class for all shapes 
 */
abstract message Shape {
	/**
	 * X coordinate of the origin of the coordinate system of this {@link Shape}.
	 */
	@Name("x")
	int32 xCoordinate;
	
	/**
	 * Y coordinate of the origin of the coordinate system of this {@link Shape}.
	 */
	@Name("y")
	int32 yCoordinate;
}

/** A {@link Shape} that has no sub-shapes. */
abstract message AtomicShape extends Shape {

}

/** 
 * A circle {@link Shape}. 
 */
message Circle extends AtomicShape {
	/**
	 * The radius of this {@link Circle} around its coordinate origin at ({@link #xCoordinate}, {@link #yCoordinate}).
	 */
	@Name("r")
	@XmlName("radius")
	int32 radius;
}

/** 
 * A rectangle.
 */
message Rectangle extends AtomicShape {
	/**
	 * The width of this {@link Rectangle}.
	 * 
	 * <p>
	 * The top left corner of this {@Rectangle} is at ({@link #xCoordinate}, {@link #yCoordinate}).
	 * </p>
	 *
	 * @see #height
	 */
	@Name("w")
	int32 width;
	
	/**
	 * The width of this {@link Rectangle}.
	 *
	 * @see #width
	 */
	@Name("h")
	int32 height;
}

/**
 * A group of shapes.
 */
message Group extends Shape {
	/**
	 * All {@link Shape}s in this {@link Group}.
	 * 
	 * <p>
	 * The origins of these {@link Shape}s get a coordinate offset of ({@link #xCoordinate}, {@link #yCoordinate}).
	 * </p>
	 */
	@Embedded
	repeated Shape shapes;
}

/**
 * A shape that can be dynamically hidden.
 */
message Optional extends Shape {

	/** Whether {@link #shape} is hidden. */
	boolean hidden;

	/**
	 * A {@link Shape} that can be dynamically hidden..
	 */
	@Embedded
	Shape shape;
}

/**
 * A special {@link Shape} that contains concrete monomorphic references to type in a polymorphic hierarchy.
 */
message Car extends Shape {
    /** The front wheel. */
	Circle wheel1;
	
    /** The back wheel. */
	Circle wheel2;
	
    /** The car body. */
	Rectangle body;
}
